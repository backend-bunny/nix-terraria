name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  # Don't trigger on releases - that's handled by release.yml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup Cachix
        uses: cachix/cachix-action@v12
        with:
          name: nix-community
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image with Nix
        run: |
          # Allow unfree packages for tModLoader
          export NIXPKGS_ALLOW_UNFREE=1

          # Build the Docker image
          nix build .#docker --impure

          # Load the image into Docker
          docker load < result

          # Get the built image name and tag it properly
          BUILT_IMAGE=$(docker images --format "table {{.Repository}}:{{.Tag}}" | grep -v "REPOSITORY" | head -n1)
          echo "Built image: $BUILT_IMAGE"

          # Tag the image with all the metadata tags
          echo '${{ steps.meta.outputs.tags }}' | while read -r tag; do
            if [ -n "$tag" ]; then
              echo "Tagging as: $tag"
              docker tag "$BUILT_IMAGE" "$tag"
            fi
          done

      - name: Push Docker image
        run: |
          # Push all tags
          echo '${{ steps.meta.outputs.tags }}' | while read -r tag; do
            if [ -n "$tag" ]; then
              echo "Pushing: $tag"
              docker push "$tag"
            fi
          done

      - name: Generate build summary
        run: |
          echo "## Docker Image Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** ${{ env.REGISTRY }}" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | while read -r tag; do
            if [ -n "$tag" ]; then
              echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
            fi
          done
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Labels:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.labels }}' | while read -r label; do
            if [ -n "$label" ]; then
              echo "- $label" >> $GITHUB_STEP_SUMMARY
            fi
          done