name: Build and Publish KubeVirt Container Disk

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-container-disk

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          accept-flake-config = true

    - name: Setup Cachix
      uses: cachix/cachix-action@v15
      with:
        name: nix-community

    - name: Free up disk space
      run: |
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force || true
        echo "Disk space after cleanup:"
        df -h

    - name: Build KubeVirt Image
      run: |
        NIXPKGS_ALLOW_UNFREE=1 nix build .#kubevirt-image --impure --print-out-paths

    - name: Prepare Container Disk
      run: |
        # Copy the qcow2 image to a predictable name
        cp result/*.qcow2 ./disk.qcow2

        # Create Dockerfile for container disk
        cat > Dockerfile << 'EOF'
        FROM scratch
        ADD disk.qcow2 /disk/
        EOF

        # Verify the image
        ls -la disk.qcow2
        file disk.qcow2

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
